"""
Django settings for ailb_web project.

Generated by 'django-admin startproject' using Django 2.2.1.

For more information on this file, see
https://docs.djangoproject.com/en/2.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.2/ref/settings/
"""

import os
import sys
import ldap
from django_auth_ldap.config import LDAPSearch, PosixGroupType


# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'p-%#r(i9w#c#_*d^y#vxu=ajn)8m9*@093cc%f6!z(ow_+(wgp'

# SECURITY WARNING: don't run with debug turned on in production!
ALLOWED_HOSTS = ['ailb-web', 'ailb-web.ing.unimore.it', 'imagelab.ing.unimore.it', 'aimagelab.ing.unimore.it', '127.0.0.1']
STATIC_URL = '/static/'
MEDIA_URL = '/media/'


runserver = 'runserver' in sys.argv
if runserver:
    DEBUG = True
else:
    # Settings per Proxy neuralstory-host
    DEBUG = False
    USE_X_FORWARDED_HOST = False
    FORCE_SCRIPT_NAME = '/'

# STATIC_ROOT = '/home/administrator/ailb_web/static'
# MEDIA_ROOT = '/home/administrator/ailb_web/media'
STATIC_ROOT = '/home/rgasparini/Documents/ailab_hwr/static'
MEDIA_ROOT = '/home/rgasparini/Documents/media'

# Application definition

INSTALLED_APPS = [
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'crispy_forms',
    'djmoney',
    # 'easy_thumbnails',
    # 'bootstrap_select.apps.BootstrapSelectConfig',
    # 'shibboleth.apps.ShibbolethConfig',
    # 'frontend.apps.FrontendConfig',
    # 'polls.apps.PollsConfig',
    'hwr.apps.HwrConfig',
    # 'cadl2020.apps.Cadl2020Config',
    # 'censimento_progetti.apps.CensimentoProgettiConfig',
    'django.contrib.admin',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

AUTHENTICATION_BACKENDS = (
    # 'django_auth_ldap.backend.LDAPBackend',
    'django.contrib.auth.backends.ModelBackend',
)

ROOT_URLCONF = 'ailb_web.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

THUMBNAIL_ALIASES = {
    '': {
        'thumb': {'size': (128, 128), 'crop': False},
    },
}


WSGI_APPLICATION = 'ailb_web.wsgi.application'


# Database
# https://docs.djangoproject.com/en/2.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
    }
}


# Password validation
# https://docs.djangoproject.com/en/2.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/2.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'Europe/Rome'

USE_I18N = True

USE_L10N = True

USE_TZ = True



# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.2/howto/static-files/


EMAIL_HOST = 'mail.lorenzobaraldi.com'
EMAIL_PORT = 587
EMAIL_HOST_USER = 'lorenzobaraldi.com'
EMAIL_HOST_PASSWORD = 'xxxx'
EMAIL_USE_TLS = True

ADMINS = [('Lorenzo Baraldi', 'lorenzo.baraldi@unimore.it')]

# AUTH_LDAP_SERVER_URI = "ldap://aimagelab-srv-login.ing.unimore.it:389"
# AUTH_LDAP_BIND_DN = "cn=admin,dc=aimagelab,dc=unimore,dc=it"
# AUTH_LDAP_BIND_PASSWORD = "xxxx"
# AUTH_LDAP_USER_SEARCH = LDAPSearch(
#     "ou=users,dc=aimagelab,dc=unimore,dc=it", ldap.SCOPE_SUBTREE, "(uid=%(user)s)"
# )
# # AUTH_LDAP_USER_DN_TEMPLATE = "uid=%(user)s,ou=users,dc=aimagelab,dc=unimore,dc=it"
# AUTH_LDAP_USER_ATTR_MAP = {"first_name": "givenName", "last_name": "sn", "email": "mail"}
# AUTH_LDAP_GROUP_SEARCH = LDAPSearch(
#     "ou=groups,dc=aimagelab,dc=unimore,dc=it", ldap.SCOPE_SUBTREE, "(objectClass=posixGroup)"
# )
# AUTH_LDAP_GROUP_TYPE = PosixGroupType()
# AUTH_LDAP_DENY_GROUP = "cn=past_members,ou=groups,dc=aimagelab,dc=unimore,dc=it"
# AUTH_LDAP_MIRROR_GROUPS = True

CRISPY_TEMPLATE_PACK = 'bootstrap4'

LOGGING = {
    "version": 1,
    "disable_existing_loggers": False,
    "handlers": {"console": {"class": "logging.StreamHandler"}},
    # "loggers": {"django_auth_ldap": {"level": "DEBUG", "handlers": ["console"]}},
}